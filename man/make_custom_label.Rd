% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_custom_label.R, R/make_vp.R,
%   R/preview_label.R
\name{make_custom_label}
\alias{make_custom_label}
\alias{make_vp}
\alias{preview_label}
\title{Make pdf pages for barcode labels based on user defined label area layout.}
\usage{
make_custom_label(
  label_number,
  name = "LabelsOut",
  label_type = NULL,
  Across = TRUE,
  ERows = 0,
  ECols = 0,
  numrow = 20,
  numcol = 4,
  page_width = 8.5,
  page_height = 11,
  width_margin = 0.3,
  height_margin = 0.5,
  label_width = 1.75,
  label_height = 0.5,
  font_size = 12,
  fontfamily = "mono",
  showborder = FALSE,
  vp_list = NULL,
  content_list = NULL,
  text_align = "center"
)

make_vp(
  x,
  y,
  width,
  height,
  just = c("left", "top"),
  font_size = 12,
  line_number = 1
)

preview_label(label_width = 1.75, label_height = 0.5, vp_list, content_list)
}
\arguments{
\item{label_number}{# how many labels to print.}

\item{name}{pdf output name (no ".pdf)}

\item{label_type}{Presets for label type "avery5967" (1.75" x 0.5") or "avery5960" (2.63" x 1"). Default is NULL so you can change the page size and lable size parameters.}

\item{Across}{logical. When TRUE, print labels across rows, left to right. When FALSE, print labels down columns, top to bottom.}

\item{ERows}{number of rows to skip}

\item{ECols}{number of columns to skip}

\item{numrow}{number of label rows per page}

\item{numcol}{number of label columns per page}

\item{page_width}{page width in inch}

\item{page_height}{page height in inch}

\item{width_margin}{side margin of label sheet in inch}

\item{height_margin}{top margin of lablel sheet in inch}

\item{label_width}{label width in inch (default label size is Avery 5967)}

\item{label_height}{label height in inch}

\item{font_size}{font size; automatically adjsuted smaller based on line number and text area height}

\item{fontfamily}{font family ("mono", "sans", "serif") or specific font based on your operation system.}

\item{showborder}{logical: whether to show border of labels. Set to TRUE to check whether everything fit in the label area.}

\item{vp_list}{a list of grid viewports for how to layout elements on the label}

\item{content_list}{a list of contents to put for each element in the vp_list}

\item{text_align}{left or center alignment for text.}

\item{x}{coordinate on the x axis}

\item{y}{coordinate on the y axis}

\item{width}{rectangle area width in inch}

\item{height}{rectangle area height in inch}

\item{just}{coordinates x and y are for (relative to)}

\item{line_number}{how many lines of text?}
}
\value{
make_custom_label: NULL, just creat a pdf

make_vp: an R object of class viewport.

preview_label: NULL
}
\description{
Make pdf pages for barcode labels based on user defined label area layout.

make_vp: a slightly simple way to make grid viewport (layout)

preview_label: Print the first label to preivew the results.
}
\examples{

dd <- data.frame(plot = 101:110, accession = LETTERS[1:10])
label_width = 1.75 # x axis
label_height = 0.5 # y axis
vp_list = list(
  # rectangle area 1: text top left: take up 0.3 of label_height, 0.5 of label_length
  text_vp1 = make_vp(
    x = 0,
    y = label_height,
    width  = label_width * 0.5,
    height = 0.3 * label_height,
    font_size = 6
  ),
  # rectangle area 2: text top right: take up 0.3 of label_height, 0.5 of label_length
  text_vp2 = make_vp(
    x = label_width * 0.5,
    y = label_height,
    width  = label_width * 0.5,
    height = 0.3 * label_height,
    font_size = 7
  ),
  # rectangle area 3: barcode in the middle: take up 0.4 of label_height
  code_vp1 = make_vp(
    x = 0,
    y = label_height * 0.7,
    width  = label_width,
    height = 0.4 * label_height
  ),
  # rectangle area 4: text at bottom
  text_vp3 = make_vp(
    x = 0,
    y = 0.3 * label_height,
    width  = label_width,
    height = 0.3 * label_height,
    font_size=12, line_number=2
  )
)
# content list: should have contents for each element in the vp_list
content_list = list(
  text1 = rep("Davis Field 2022", nrow(dd)),
  text2 = paste0("Plot ",dd$plot),
  code = lapply(as.character(dd$plot), barcodeLabel:::code_128_make),
  text3 = paste0("Plot ",dd$plot, "\n", "Acc ", dd$accession)
)
# preview
preview_label(label_width=1.75, label_height=0.5, vp_list, content_list)
# create pdf
make_custom_label(
  label_number = nrow(dd), # how many labels to print
  name = "linear_custom_layout_test", # pdf output file name
  label_type = "avery5967",
  fontfamily = "mono", # "mono", "sans", "serif"
  showborder = T, # whether to show border of labels
  vp_list = vp_list,
  content_list = content_list,
  text_align = "center" # left or center
)
}
